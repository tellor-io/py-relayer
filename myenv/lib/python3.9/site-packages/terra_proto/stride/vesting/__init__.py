# Generated by the protocol buffer compiler.  DO NOT EDIT!
# sources: stride/vesting/tx.proto, stride/vesting/vesting.proto
# plugin: python-betterproto
from dataclasses import dataclass
from typing import (
    Dict,
    List,
)

import betterproto
import grpclib
from betterproto.grpc.grpclib_server import ServiceBase

from ...cosmos.auth import v1beta1 as __cosmos_auth_v1_beta1__
from ...cosmos.base import v1beta1 as __cosmos_base_v1_beta1__


@dataclass(eq=False, repr=False)
class BaseVestingAccount(betterproto.Message):
    """
    BaseVestingAccount implements the VestingAccount interface. It contains all
    the necessary fields needed for any vesting account implementation.
    """

    base_account: "__cosmos_auth_v1_beta1__.BaseAccount" = betterproto.message_field(1)
    original_vesting: List["__cosmos_base_v1_beta1__.Coin"] = betterproto.message_field(
        2
    )
    delegated_free: List["__cosmos_base_v1_beta1__.Coin"] = betterproto.message_field(3)
    delegated_vesting: List[
        "__cosmos_base_v1_beta1__.Coin"
    ] = betterproto.message_field(4)
    end_time: int = betterproto.int64_field(5)


@dataclass(eq=False, repr=False)
class Period(betterproto.Message):
    """Period defines a length of time and amount of coins that will vest."""

    start_time: int = betterproto.int64_field(1)
    length: int = betterproto.int64_field(2)
    amount: List["__cosmos_base_v1_beta1__.Coin"] = betterproto.message_field(3)
    action_type: int = betterproto.int32_field(4)


@dataclass(eq=False, repr=False)
class StridePeriodicVestingAccount(betterproto.Message):
    """
    StridePeriodicVestingAccount implements the VestingAccount interface. It
    periodically vests by unlocking coins during each specified period.
    """

    base_vesting_account: "BaseVestingAccount" = betterproto.message_field(1)
    vesting_periods: List["Period"] = betterproto.message_field(3)


class MsgStub(betterproto.ServiceStub):
    pass


class MsgBase(ServiceBase):
    def __mapping__(self) -> Dict[str, grpclib.const.Handler]:
        return {}
